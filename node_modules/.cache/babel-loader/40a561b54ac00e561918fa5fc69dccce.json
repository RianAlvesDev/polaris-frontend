{"ast":null,"code":"var _jsxFileName = \"/home/atorres/Dev/JS/ztech-front-end-reactjs/src/layouts/signup/index.js\";\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport styled from \"@mui/material/styles/styled\";\nimport { useNavigate } from \"react-router-dom\";\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100vh\"\n});\nconst PaperWrapper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(4),\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: 300,\n  height: 460\n}));\nconst Form = styled(\"form\")(({\n  theme\n}) => ({\n  width: \"100%\",\n  marginTop: theme.spacing(1)\n}));\nconst SubmitButton = styled(Button)(({\n  theme\n}) => ({\n  margin: theme.spacing(3, 0, 2)\n}));\nfunction Signup() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSignUp = () => {\n    // Realize a validação do email e senha aqui.\n    if (!validateEmail(email)) {\n      alert(\"Por favor, insira um email válido.\");\n      return;\n    }\n    if (!validatePassword(password)) {\n      alert(\"A senha deve ter pelo menos 8 caracteres, incluindo pelo menos um caractere maiúsculo e um caractere especial.\");\n      return;\n    }\n\n    // Se as validações passarem, você pode implementar o código para criar a conta do usuário.\n    // Isso pode incluir uma chamada de API para o backend.\n\n    // Após o sucesso do registro, você pode redirecionar o usuário para a página de login.\n    navigate(\"/login\");\n  };\n  const validateEmail = email => {\n    // Implemente sua lógica de validação de email, por exemplo, usando uma expressão regular.\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    // Implemente sua lógica de validação de senha.\n    // Aqui está um exemplo que verifica se a senha tem pelo menos 8 caracteres,\n    // um caractere maiúsculo e um caractere especial.\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(.{8,})$/;\n    return passwordRegex.test(password);\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PaperWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/logo.png\",\n    alt: \"Seu Logo\",\n    width: \"85\",\n    height: \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    marginTop: \"15px\",\n    color: \"gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    InputProps: {\n      style: {\n        color: \"gray\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"gray\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"new-password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    InputProps: {\n      style: {\n        color: \"gray\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"gray\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"confirmPassword\",\n    autoComplete: \"new-password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    InputProps: {\n      style: {\n        color: \"gray\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"gray\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      color: \"white\",\n      backgroundColor: \"primary\"\n    },\n    onClick: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Sign Up\"))));\n}\nexport default Signup;","map":{"version":3,"names":["React","useState","TextField","Button","Paper","Typography","styled","useNavigate","Container","display","flexDirection","alignItems","justifyContent","height","PaperWrapper","theme","padding","spacing","width","Form","marginTop","SubmitButton","margin","Signup","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","navigate","handleSignUp","validateEmail","alert","validatePassword","emailRegex","test","passwordRegex","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","component","variant","color","required","fullWidth","id","label","name","autoComplete","value","onChange","e","target","InputProps","style","InputLabelProps","type","backgroundColor","onClick"],"sources":["/home/atorres/Dev/JS/ztech-front-end-reactjs/src/layouts/signup/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport styled from \"@mui/material/styles/styled\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Container = styled(\"div\")({\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n});\n\nconst PaperWrapper = styled(Paper)(({ theme }) => ({\n    padding: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: 300,\n    height: 460,\n}));\n\nconst Form = styled(\"form\")(({ theme }) => ({\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n}));\n\nconst SubmitButton = styled(Button)(({ theme }) => ({\n    margin: theme.spacing(3, 0, 2),\n}));\n\nfunction Signup() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleSignUp = () => {\n        // Realize a validação do email e senha aqui.\n        if (!validateEmail(email)) {\n            alert(\"Por favor, insira um email válido.\");\n            return;\n        }\n\n        if (!validatePassword(password)) {\n            alert(\n                \"A senha deve ter pelo menos 8 caracteres, incluindo pelo menos um caractere maiúsculo e um caractere especial.\"\n            );\n            return;\n        }\n\n        // Se as validações passarem, você pode implementar o código para criar a conta do usuário.\n        // Isso pode incluir uma chamada de API para o backend.\n\n        // Após o sucesso do registro, você pode redirecionar o usuário para a página de login.\n        navigate(\"/login\");\n    };\n\n    const validateEmail = (email) => {\n        // Implemente sua lógica de validação de email, por exemplo, usando uma expressão regular.\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n        return emailRegex.test(email);\n    };\n\n    const validatePassword = (password) => {\n        // Implemente sua lógica de validação de senha.\n        // Aqui está um exemplo que verifica se a senha tem pelo menos 8 caracteres,\n        // um caractere maiúsculo e um caractere especial.\n        const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(.{8,})$/;\n        return passwordRegex.test(password);\n    };\n\n    return (\n        <Container>\n            <PaperWrapper>\n                <img\n                    src=\"/logo.png\"\n                    alt=\"Seu Logo\"\n                    width=\"85\"\n                    height=\"80\"\n                />\n                <Typography component=\"h1\" variant=\"h5\" marginTop=\"15px\" color=\"gray\">\n                    Sign Up\n                </Typography>\n                <Form>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        InputProps={{\n                            style: { color: \"gray\" },\n                        }}\n                        InputLabelProps={{\n                            style: { color: \"gray\" },\n                        }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"new-password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        InputProps={{\n                            style: { color: \"gray\" },\n                        }}\n                        InputLabelProps={{\n                            style: { color: \"gray\" },\n                        }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"confirmPassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        id=\"confirmPassword\"\n                        autoComplete=\"new-password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        InputProps={{\n                            style: { color: \"gray\" },\n                        }}\n                        InputLabelProps={{\n                            style: { color: \"gray\" },\n                        }}\n                    />\n                    <SubmitButton\n                        type=\"button\"\n                        fullWidth\n                        variant=\"contained\"\n                        style={{ color: \"white\", backgroundColor: \"primary\" }}\n                        onClick={handleSignUp}\n                    >\n                        Sign Up\n                    </SubmitButton>\n                </Form>\n            </PaperWrapper>\n        </Container>\n    );\n}\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}